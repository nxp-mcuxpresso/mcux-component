/* auto-generated by gen_sdk_syscalls.py, don't edit */

#ifndef Z_INCLUDE_SYSCALLS_FLASH_H
#define Z_INCLUDE_SYSCALLS_FLASH_H


#ifdef __cplusplus
extern "C" {
#endif

extern int z_impl_flash_read(const struct device * dev, off_t offset, void * data, size_t len);

__pinned_func
static inline int flash_read(const struct device * dev, off_t offset, void * data, size_t len)
{
	return z_impl_flash_read(dev, offset, data, len);
}


extern int z_impl_flash_write(const struct device * dev, off_t offset, const void * data, size_t len);

__pinned_func
static inline int flash_write(const struct device * dev, off_t offset, const void * data, size_t len)
{
	return z_impl_flash_write(dev, offset, data, len);
}


extern int z_impl_flash_erase(const struct device * dev, off_t offset, size_t size);

__pinned_func
static inline int flash_erase(const struct device * dev, off_t offset, size_t size)
{
	return z_impl_flash_erase(dev, offset, size);
}


extern int z_impl_flash_fill(const struct device * dev, uint8_t val, off_t offset, size_t size);

__pinned_func
static inline int flash_fill(const struct device * dev, uint8_t val, off_t offset, size_t size)
{
	return z_impl_flash_fill(dev, val, offset, size);
}


extern int z_impl_flash_flatten(const struct device * dev, off_t offset, size_t size);

__pinned_func
static inline int flash_flatten(const struct device * dev, off_t offset, size_t size)
{
	return z_impl_flash_flatten(dev, offset, size);
}


extern int z_impl_flash_get_page_info_by_offs(const struct device * dev, off_t offset, struct flash_pages_info * info);

__pinned_func
static inline int flash_get_page_info_by_offs(const struct device * dev, off_t offset, struct flash_pages_info * info)
{
	return z_impl_flash_get_page_info_by_offs(dev, offset, info);
}


extern int z_impl_flash_get_page_info_by_idx(const struct device * dev, uint32_t page_index, struct flash_pages_info * info);

__pinned_func
static inline int flash_get_page_info_by_idx(const struct device * dev, uint32_t page_index, struct flash_pages_info * info)
{
	return z_impl_flash_get_page_info_by_idx(dev, page_index, info);
}


extern size_t z_impl_flash_get_page_count(const struct device * dev);

__pinned_func
static inline size_t flash_get_page_count(const struct device * dev)
{
	return z_impl_flash_get_page_count(dev);
}


extern int z_impl_flash_sfdp_read(const struct device * dev, off_t offset, void * data, size_t len);

__pinned_func
static inline int flash_sfdp_read(const struct device * dev, off_t offset, void * data, size_t len)
{
	return z_impl_flash_sfdp_read(dev, offset, data, len);
}


extern int z_impl_flash_read_jedec_id(const struct device * dev, uint8_t * id);

__pinned_func
static inline int flash_read_jedec_id(const struct device * dev, uint8_t * id)
{
	return z_impl_flash_read_jedec_id(dev, id);
}


extern size_t z_impl_flash_get_write_block_size(const struct device * dev);

__pinned_func
static inline size_t flash_get_write_block_size(const struct device * dev)
{
	return z_impl_flash_get_write_block_size(dev);
}


extern const struct flash_parameters * z_impl_flash_get_parameters(const struct device * dev);

__pinned_func
static inline const struct flash_parameters * flash_get_parameters(const struct device * dev)
{
	return z_impl_flash_get_parameters(dev);
}


extern int z_impl_flash_ex_op(const struct device * dev, uint16_t code, const uintptr_t in, void * out);

__pinned_func
static inline int flash_ex_op(const struct device * dev, uint16_t code, const uintptr_t in, void * out)
{
	return z_impl_flash_ex_op(dev, code, in, out);
}


extern int z_impl_flash_copy(const struct device * src_dev, off_t src_offset, const struct device * dst_dev, off_t dst_offset, off_t size, uint8_t * buf, size_t buf_size);

__pinned_func
static inline int flash_copy(const struct device * src_dev, off_t src_offset, const struct device * dst_dev, off_t dst_offset, off_t size, uint8_t * buf, size_t buf_size)
{
	return z_impl_flash_copy(src_dev, src_offset, dst_dev, dst_offset, size, buf, buf_size);
}


#ifdef __cplusplus
}
#endif

#endif /* include guard */
